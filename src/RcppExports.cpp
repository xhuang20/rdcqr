// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cqrMMcpp
Rcpp::List cqrMMcpp(double x0, const arma::colvec& x_vec, const arma::colvec& y, int kernID, const arma::colvec& tau, double h, int p, int maxit, double tol);
RcppExport SEXP _rdcqr_cqrMMcpp(SEXP x0SEXP, SEXP x_vecSEXP, SEXP ySEXP, SEXP kernIDSEXP, SEXP tauSEXP, SEXP hSEXP, SEXP pSEXP, SEXP maxitSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type x_vec(x_vecSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type kernID(kernIDSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(cqrMMcpp(x0, x_vec, y, kernID, tau, h, p, maxit, tol));
    return rcpp_result_gen;
END_RCPP
}
// est_cqr
Rcpp::List est_cqr(const arma::colvec& x_vec, const arma::colvec& y, int kernID, const arma::colvec& tau, double h, int p, int maxit, double tol, int parallel, int grainsize);
RcppExport SEXP _rdcqr_est_cqr(SEXP x_vecSEXP, SEXP ySEXP, SEXP kernIDSEXP, SEXP tauSEXP, SEXP hSEXP, SEXP pSEXP, SEXP maxitSEXP, SEXP tolSEXP, SEXP parallelSEXP, SEXP grainsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x_vec(x_vecSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type kernID(kernIDSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type parallel(parallelSEXP);
    Rcpp::traits::input_parameter< int >::type grainsize(grainsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(est_cqr(x_vec, y, kernID, tau, h, p, maxit, tol, parallel, grainsize));
    return rcpp_result_gen;
END_RCPP
}
// cqrMMxcv
Rcpp::List cqrMMxcv(double x0, const arma::colvec& x_vec, const arma::colvec& y, const arma::mat& xcv, int kernID, const arma::colvec& tau, double h, int p, int maxit, double tol);
RcppExport SEXP _rdcqr_cqrMMxcv(SEXP x0SEXP, SEXP x_vecSEXP, SEXP ySEXP, SEXP xcvSEXP, SEXP kernIDSEXP, SEXP tauSEXP, SEXP hSEXP, SEXP pSEXP, SEXP maxitSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type x_vec(x_vecSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type xcv(xcvSEXP);
    Rcpp::traits::input_parameter< int >::type kernID(kernIDSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(cqrMMxcv(x0, x_vec, y, xcv, kernID, tau, h, p, maxit, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rdcqr_cqrMMcpp", (DL_FUNC) &_rdcqr_cqrMMcpp, 9},
    {"_rdcqr_est_cqr", (DL_FUNC) &_rdcqr_est_cqr, 10},
    {"_rdcqr_cqrMMxcv", (DL_FUNC) &_rdcqr_cqrMMxcv, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_rdcqr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
