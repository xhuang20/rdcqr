% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cqrMMxcv}
\alias{cqrMMxcv}
\title{Function to compute the local composite quantile regression estimate with covariates}
\usage{
cqrMMxcv(x0, x_vec, y, xcv, kernID, tau, h, p, maxit = 100L, tol = 1e-04)
}
\arguments{
\item{x0}{point of interest}

\item{x_vec}{a vector of covariates}

\item{y}{a vector of dependent variable, the treatment outcome variable
in the case of regression discontinuity.}

\item{xcv}{A matrix of additional covariates to be used in local regression analysis.
It must have the same number of rows as the running variable \code{x}. When calling
the function \code{cqrMMxcv} directly, if there is no additional covariate, set
xcv as an arbitrary zero matrix, e.g., \code{xcv = matrix(0,2,2)}, as the corresponding
function argument value.}

\item{kernID}{kernel ID for different kernels.
\enumerate{
\item \code{kernID = 0}: triangular kernel.
\item \code{kernID = 1}: biweight kernel.
\item \code{kernID = 2}: Epanechnikov kernel.
\item \code{kernID = 3}: Gaussian kernel.
\item \code{kernID = 4}: tricube kernel.
\item \code{kernID = 5}: triweight kernel.
\item \code{kernID = 6}: uniform kernel.
}}

\item{tau}{A vector of quantile positions. They are obtained by
\code{tau = (1:q)/(q+1)}.}

\item{h}{A scalar bandwidth.}

\item{p}{The polynomial degree.}

\item{maxit}{Maximum iteration number in the MM algorithm for quantile
estimation.}

\item{tol}{Convergence criterion in the MM algorithm.}
}
\value{
\code{cqrMMxcv} returns a list with the following components:
\item{beta0}{A q by 1 vector of estimates for q quantiles.}
\item{beta1}{A p by 1 vector of estimates for the first p derivatives of
the conditional mean function.}
}
\description{
This function computes the local composite quantile regression
estimate with covariates. The point of interest can be either interior or boundary.
}
\examples{
# Use the Head Start data as an example.
data(headstart)
data_n = subset(headstart, headstart$poverty < 0)
q      = 5
tau    = (1:q) / (q + 1)

# Compute the local composite quantile estimate
est = cqrMMxcv(x0     = 0,
               x_vec  = data_n$poverty,
               y      = data_n$mortality,
               xcv    = matrix(0,2,2),
               kernID = 2,
               tau    = tau,
               h      = 4.0,
               p      = 1,
               maxit  = 10,
               tol    = 1.0e-3)
               
# Estimate of the conditional mean on the boundary
est_mean = mean(est$beta0)

# Estimate of the first derivative of the conditional mean function
est_d1   = est$beta1[1]
}
