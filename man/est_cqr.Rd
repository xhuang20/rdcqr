% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{est_cqr}
\alias{est_cqr}
\title{Function to compute the fitted values and residuals}
\usage{
est_cqr(
  x_vec,
  y,
  kernID,
  tau,
  h,
  p = 1L,
  maxit = 100L,
  tol = 1e-04,
  parallel = 0L,
  grainsize = 1L
)
}
\arguments{
\item{x_vec}{A vector of covariates.}

\item{y}{a vector of dependent variable, the treatment outcome variable
in the case of regression discontinuity.}

\item{kernID}{The kernel id that includes
\enumerate{
\item \code{kernID = 0}: triangular kernel.
\item \code{kernID = 1}: biweight kernel.
\item \code{kernID = 2}: Epanechnikov kernel.
\item \code{kernID = 3}: Gaussian kernel.
\item \code{kernID = 4}: tricube kernel.
\item \code{kernID = 5}: triweight kernel.
\item \code{kernID = 6}: uniform kernel.
}}

\item{tau}{A vector of quantile positions. They are obtained by
\code{tau = (1:q)/(q+1)}.}

\item{h}{A scalar bandwidth.}

\item{p}{The polynomial degree. Defaults to 1.}

\item{maxit}{Maximum number of iterations in the MM algorithm. Defaults to 100.}

\item{tol}{The convergence criterion. Defaults to 1.0e-4.}

\item{parallel}{Set it to 1 if using parallel computing. Default is 1.}

\item{grainsize}{The minimum chunk size for parallelization. Defaults to 1.}
}
\value{
\code{est_cqr} returns a list with the following components:
\item{y_hat}{The fitted value at each point of the input vector \code{x_vec}.}
\item{u_hat}{The residual vector.}
\item{sig_hat}{The estimated standard deviation at each point of the input
vector \code{x_vec}.}
\item{e_hat}{The scaled residual vector. It is the residual vector divided
by the \code{sig_hat} vector.}
}
\description{
This function computes the fitted values and residuals
in a local composite quantile regression.
}
\examples{
# Use the Head Start data as an example.
data(headstart)
data_n = subset(headstart, headstart$poverty < 0)
q      = 5
tau    = (1:q) / (q + 1)
est_cqr(x_vec  = data_n$poverty,
        y      = data_n$mortality,
        kernID = 2,
        tau    = tau,
        h      = 4.0,
        p      = 1) 
}
